% draws target to periphery based on targetx and targety, for each trialrect = [0, 0, p.targetsize, p.targetsize];%% Draw gaussian blob to soften edges of flashing stimulusif gaussEdges ==1    %%    rect1 = ones(p.targetsize, p.targetsize)*p.targetcolour(1); %fill rect with white    %make matrix for gaussian    imSize = p.targetsize;                           % image size: n X n%     sigma = p.targetsize/5;                             % gaussian standard deviation in pixels%     %     trim = .04; %below this becomes black%     %     highlight=.1; %above this full contrast.%     %     %linear ramp%     X = 1:imSize;%     X0 = (X / imSize) - .5;   %rescale%     s=(sigma / imSize) ; %Gaussian width as fraction of imageSize%     %     %2D grating%     [Xm, Ym] = meshgrid(X0, X0);%     %     Xg = exp( -(((X0.^2)) ./ (2* s^2))); % 2D mesh guassian%     %     %     gauss = exp( -(((Xm.^2)+(Ym.^2)) ./ (2* s^2)) ); %2D gauss curve        [X,Y]=meshgrid(1:imSize);    gaussSD=35;    xx=normpdf(X,imSize/2,gaussSD);    yy=normpdf(Y,imSize/2,gaussSD);    gauss=xx.*yy;    gauss=gauss/max(gauss(:));    %%    %     if p.backgroundcolour(1) == 127.5;    %         gauss2 = gauss./2;    %         gauss = gauss2+.5;    %     end        %     %trim edges    %     for i=1:imSize    %         for j = 1:imSize    %             val = gauss(i,j);    %             if val<trim    %                 gauss(i,j)=0;    %             end    % %             if val>highlight    % %                 gauss(i,j)=1;    % %             end    %         end    %     end    %        %     clf    %     subplot(2,1,1)    %     plot(gauss)    %     subplot(2,1,2)    %     imagesc(gauss)    %     % show in grey scale    %     cmap=contrast(gauss)    %     colormap(cmap)    %     %%    %     clf    %     %%    %     imagesc(gauss)    %     colorbar    %%    %multiply to create white guassian blob    %     temp= rect1.* gauss;            %show shape/sanity check    %     subplot(2,2,1)    %     plot(Xg)    %     subplot(2,2,2)    %     plot(gauss)    %     subplot(2,2,3)    %     imagesc(gauss)    %     colorbar    %     subplot(2,2,4)    %     imagesc(blob)    %     colorbar    %%    %multiply blobgrid by contrast, target colour, flicker position, and catch    %value    XLoc1  = am1(frame).*ones(imSize,imSize);%.*gauss;    XLoc2  = am2(frame).*ones(imSize,imSize);%.*gauss;    XLoc3  = am3(frame).*ones(imSize,imSize);%.*gauss;    XLoc4  = am4(frame).*ones(imSize,imSize);%.*gauss;    %     if am1(frame) < 0;    %         X1 = X1*-1;    %     end    % subplot(2,1,1)    % imagesc(X1);    % colorbar    %%    if andCheckbd==1    Xdup = ones(size(XLoc1,1), size(XLoc1,2));            halfIndex= imSize/2;    %filling texture    for ifillr = 1:(imSize/(imSize/2))        rows =(1:halfIndex) + (halfIndex*(ifillr-1));        isoddr = mod(ifillr,2);        if isoddr==1             for ifillc=1:(imSize/(imSize/2))                cols =(1:halfIndex) +(halfIndex*(ifillc-1));                isoddc = mod(ifillc,2);                if isoddc==1;                    Xdup(rows,cols)= Xdup(rows,cols)*-1;                end            end                    else                for ifillc=1:(imSize/(imSize/2))                cols =(1:halfIndex) + (halfIndex*(ifillc-1));                isoddc = mod(ifillc,2);                if isoddc==0;                    Xdup(rows,cols)= Xdup(rows,cols)*-1;                end            end                    end    end            %     clf%     subplot(3,1,1)% imagesc(X1)% colorbar% %     subplot(3,1,2)% imagesc(Xdup)% %     shg% colorbar% %     gratgaussLoc1= XLoc1.*Xdup;gratgaussLoc2= XLoc2.*Xdup;gratgaussLoc3= XLoc3.*Xdup;gratgaussLoc4= XLoc4.*Xdup;% %     subplot(3,1,3)% imagesc(gratgauss)% %     colorbar%This adds the randomnes to the target. Either gradually towards the edges,%or to the entire target for the catch.    XzzLoc1=gratgaussLoc1;%+targetspot1;    XzzLoc2=gratgaussLoc2;%+targetspot2;    XzzLoc3=gratgaussLoc3;%+targetspot3;    XzzLoc4=gratgaussLoc4;%+targetspot4;    end    %%        %%    %X2 = (trialdata{trial}.contrast)*Xzz;    %%    X3Loc1 = XzzLoc1/2 + 0.5;    X3Loc2 = XzzLoc2/2 + 0.5;    X3Loc3 = XzzLoc3/2 + 0.5;    X3Loc4 = XzzLoc4/2 + 0.5; %ChANGED THIS TO SEE IF IT TURNS BLACK, it does when you comment out the + 0.5.    %     subplot(2,1,2)    %     imagesc(X3)    %     shg    %     colorbar    %%    if c_rampval>0         blobLoc1(:,:,1)= (X3Loc1*p.targetcolour(1));         blobLoc1(:,:,2)= (X3Loc1*p.targetcolour(1));         blobLoc1(:,:,3)= (X3Loc1*p.targetcolour(1));         blobLoc1(:,:,4)= (gauss*255);         blobLoc2(:,:,1)= (X3Loc2*p.targetcolour(1));         blobLoc2(:,:,2)= (X3Loc2*p.targetcolour(1));         blobLoc2(:,:,3)= (X3Loc2*p.targetcolour(1));         blobLoc2(:,:,4)= (gauss*255);         blobLoc3(:,:,1)= (X3Loc3*p.targetcolour(1));         blobLoc3(:,:,2)= (X3Loc3*p.targetcolour(1));         blobLoc3(:,:,3)= (X3Loc3*p.targetcolour(1));         blobLoc3(:,:,4)= (gauss*255);         blobLoc4(:,:,1)= (X3Loc4*p.targetcolour(1));         blobLoc4(:,:,2)= (X3Loc4*p.targetcolour(1));         blobLoc4(:,:,3)= (X3Loc4*p.targetcolour(1));         blobLoc4(:,:,4)= (gauss*255);   elseif c_rampval==0        %blob=rectd*250;        if catchTrials(options(trialdata{trial}.condition,1),1)==0         blobLoc1(:,:,1)= (X3Loc1*p.targetcolour(1));         blobLoc1(:,:,2)= (X3Loc1*p.targetcolour(1));         blobLoc1(:,:,3)= (X3Loc1*p.targetcolour(1));         blobLoc1(:,:,4)= (gauss*255);        elseif catchTrials(options(trialdata{trial}.condition,1),1)==1            blobLoc1(:,:,1)= (X3Loc1*p.targetcolour(1));         blobLoc1(:,:,2)= (X3Loc1*p.targetcolour(1));         blobLoc1(:,:,3)= (X3Loc1*p.targetcolour(1));         blobLoc1(:,:,4)= (0);        end        if catchTrials(options(trialdata{trial}.condition,1),2)==0         blobLoc2(:,:,1)= (X3Loc2*p.targetcolour(1));         blobLoc2(:,:,2)= (X3Loc2*p.targetcolour(1));         blobLoc2(:,:,3)= (X3Loc2*p.targetcolour(1));         blobLoc2(:,:,4)= (gauss*255);        elseif catchTrials(options(trialdata{trial}.condition,1),2)==1            blobLoc2(:,:,1)= (X3Loc2*p.targetcolour(1));         blobLoc2(:,:,2)= (X3Loc2*p.targetcolour(1));         blobLoc2(:,:,3)= (X3Loc2*p.targetcolour(1));         blobLoc2(:,:,4)= (0);        end        if catchTrials(options(trialdata{trial}.condition,1),3)==0          blobLoc3(:,:,1)= (X3Loc3*p.targetcolour(1));         blobLoc3(:,:,2)= (X3Loc3*p.targetcolour(1));         blobLoc3(:,:,3)= (X3Loc3*p.targetcolour(1));         blobLoc3(:,:,4)= (gauss*255);        elseif catchTrials(options(trialdata{trial}.condition,1),3)==1          blobLoc3(:,:,1)= (X3Loc3*p.targetcolour(1));         blobLoc3(:,:,2)= (X3Loc3*p.targetcolour(1));         blobLoc3(:,:,3)= (X3Loc3*p.targetcolour(1));         blobLoc3(:,:,4)= (0);          end        if catchTrials(options(trialdata{trial}.condition,1),4)==0         blobLoc4(:,:,1)= (X3Loc4*p.targetcolour(1));         blobLoc4(:,:,2)= (X3Loc4*p.targetcolour(1));         blobLoc4(:,:,3)= (X3Loc4*p.targetcolour(1));         blobLoc4(:,:,4)= (gauss*255);        elseif catchTrials(options(trialdata{trial}.condition,1),4)==1            blobLoc4(:,:,1)= (X3Loc4*p.targetcolour(1));         blobLoc4(:,:,2)= (X3Loc4*p.targetcolour(1));         blobLoc4(:,:,3)= (X3Loc4*p.targetcolour(1));         blobLoc4(:,:,4)= (0);        end    end       %      blob= X3*p.targetcolour(1).*c_rampval;    %    subplot(2,1,2)    %     imagesc(blob)    %     colorbar%     %     %     %             %%    %     blob= (trialdata{trial}.contrast.*p.targetcolour(1).*am1(frame).*c_rampval)*gauss;    % sca, keyboard    %    %      %trim edges    %     for i=1:imSize    %         for j = 1:imSize    %             val = blob(i,j);    %             if val<p.backgroundcolour(1)    %                 blob(i,j)=p.backgroundcolour(1);    %             end    % %             if val>highlight    % %                 gauss(i,j)=1;    % %             end    %         end    %     end       blobtexLoc1 = Screen('MakeTexture', win.Number, blobLoc1);    blobtexLoc2 = Screen('MakeTexture', win.Number, blobLoc2);    blobtexLoc3 = Screen('MakeTexture', win.Number, blobLoc3);    blobtexLoc4 = Screen('MakeTexture', win.Number, blobLoc4);           %%        Xloc1=-1;    Xloc2=1;    Xloc3=-1;    Xloc4=1;        Yloc1=-1;    Yloc2=-1;    Yloc3=1;    Yloc4=1;                    xcoordLoc1 = win.Center(1)+Xloc1*p.eccx;        xcoordLoc2 = win.Center(1)+Xloc2*p.eccx;        xcoordLoc3 = win.Center(1)+Xloc3*p.eccx;        xcoordLoc4 = win.Center(1)+Xloc4*p.eccx;                ycoordLoc1 = win.Center(2)+Yloc1*p.eccy;        ycoordLoc2 = win.Center(2)+Yloc2*p.eccy;        ycoordLoc3 = win.Center(2)+Yloc3*p.eccy;        ycoordLoc4 = win.Center(2)+Yloc4*p.eccy;                targetlocation1 = CenterRectOnPoint(rect,xcoordLoc1,ycoordLoc1);        targetlocation2 = CenterRectOnPoint(rect,xcoordLoc2,ycoordLoc2);        targetlocation3 = CenterRectOnPoint(rect,xcoordLoc3,ycoordLoc3);        targetlocation4 = CenterRectOnPoint(rect,xcoordLoc4,ycoordLoc4);                %%%%%%LEFT HERE%%%%                Screen('DrawTexture', win.Number, blobtexLoc1, [], targetlocation1); %[], [], c_rampval        Screen('DrawTexture', win.Number, blobtexLoc2, [], targetlocation2);        Screen('DrawTexture', win.Number, blobtexLoc3, [], targetlocation3);        Screen('DrawTexture', win.Number, blobtexLoc4, [], targetlocation4);        end